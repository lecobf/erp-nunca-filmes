# ============================================================
# üé¨ ERP NUNCA FILMES - Backend FastAPI
# Dockerfile multi-stage para Render / produ√ß√£o
# Python 3.12 + Uvicorn + Gunicorn
# ============================================================

# -----------------------------
# üîπ Etapa 1: Builder (instala depend√™ncias)
# -----------------------------
FROM python:3.12-slim AS builder

# Define diret√≥rio de trabalho
WORKDIR /app

# Atualiza pacotes b√°sicos e instala depend√™ncias do sistema
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential gcc libpq-dev curl && \
    rm -rf /var/lib/apt/lists/*

# Copia apenas arquivos necess√°rios para cache de depend√™ncias
COPY requirements.txt .

# Instala depend√™ncias no ambiente isolado
RUN pip install --upgrade pip && \
    pip install --prefix=/install -r requirements.txt

# -----------------------------
# üîπ Etapa 2: Runner (imagem final leve)
# -----------------------------
FROM python:3.12-slim

# Define diret√≥rio de trabalho
WORKDIR /app

# Copia depend√™ncias instaladas do builder
COPY --from=builder /install /usr/local

# Copia o c√≥digo-fonte do backend
COPY app ./app
COPY alembic ./alembic
COPY alembic.ini .
COPY requirements.txt .
COPY scripts ./scripts

# Define vari√°veis de ambiente padr√£o
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PORT=8000 \
    ENV=production

# Exposi√ß√£o da porta padr√£o FastAPI
EXPOSE 8000

# Comando padr√£o para produ√ß√£o (Render usa o $PORT automaticamente)
CMD ["gunicorn", "-k", "uvicorn.workers.UvicornWorker", "app.main:app", "--bind", "0.0.0.0:8000", "--workers", "4", "--timeout", "120"]
